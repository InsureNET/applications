{
  "contractName": "HurricanePayoutInterface",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_policyId",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_riskId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_offset",
          "type": "uint256"
        }
      ],
      "name": "schedulePayoutOraclizeCall",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_policyId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_riskId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_offset\",\"type\":\"uint256\"}],\"name\":\"schedulePayoutOraclizeCall\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/jaxcoder/Projects/InetMaster/applications/admin-tool/src/contracts/hurricane/HurricanePayoutInterface.sol\":\"HurricanePayoutInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/jaxcoder/Projects/InetMaster/applications/admin-tool/src/contracts/hurricane/HurricanePayoutInterface.sol\":{\"keccak256\":\"0x10ab7cdb4392955448f682e4acdfc16d94bfb22a0bbaa33b4174825e7d647679\",\"urls\":[\"bzz-raw://5f1749a199a29d4d41664ca6a9d2db17e66781b6c36c4f384bf09c9880f2a796\",\"dweb:/ipfs/QmRBSk4tvcq1opz4JmcfnERG3MCwkCHxRkEw4ywRVikvTC\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "/**\n * Oraclized Underwriting and Payout\n *\n * @description\tPayout contract interface\n * @copyright (c) 2020 InsureNET\n * @author Jason Romero\n */\n\npragma solidity 0.5.16;\n\n\ncontract HurricanePayoutInterface {\n  function schedulePayoutOraclizeCall(uint _policyId, bytes32 _riskId, uint _offset) public;\n}",
  "sourcePath": "/home/jaxcoder/Projects/InetMaster/applications/admin-tool/src/contracts/hurricane/HurricanePayoutInterface.sol",
  "ast": {
    "absolutePath": "/home/jaxcoder/Projects/InetMaster/applications/admin-tool/src/contracts/hurricane/HurricanePayoutInterface.sol",
    "exportedSymbols": {
      "HurricanePayoutInterface": [
        2948
      ]
    },
    "id": 2949,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2938,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "156:23:20"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 2948,
        "linearizedBaseContracts": [
          2948
        ],
        "name": "HurricanePayoutInterface",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "id": 2947,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "schedulePayoutOraclizeCall",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2945,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2940,
                  "name": "_policyId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2947,
                  "src": "260:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2939,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "260:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2942,
                  "name": "_riskId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2947,
                  "src": "276:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2941,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "276:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2944,
                  "name": "_offset",
                  "nodeType": "VariableDeclaration",
                  "scope": 2947,
                  "src": "293:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2943,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "293:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "259:47:20"
            },
            "returnParameters": {
              "id": 2946,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "313:0:20"
            },
            "scope": 2948,
            "src": "224:90:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2949,
        "src": "185:132:20"
      }
    ],
    "src": "156:161:20"
  },
  "legacyAST": {
    "absolutePath": "/home/jaxcoder/Projects/InetMaster/applications/admin-tool/src/contracts/hurricane/HurricanePayoutInterface.sol",
    "exportedSymbols": {
      "HurricanePayoutInterface": [
        2948
      ]
    },
    "id": 2949,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2938,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "156:23:20"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 2948,
        "linearizedBaseContracts": [
          2948
        ],
        "name": "HurricanePayoutInterface",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "id": 2947,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "schedulePayoutOraclizeCall",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2945,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2940,
                  "name": "_policyId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2947,
                  "src": "260:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2939,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "260:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2942,
                  "name": "_riskId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2947,
                  "src": "276:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2941,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "276:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2944,
                  "name": "_offset",
                  "nodeType": "VariableDeclaration",
                  "scope": 2947,
                  "src": "293:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2943,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "293:4:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "259:47:20"
            },
            "returnParameters": {
              "id": 2946,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "313:0:20"
            },
            "scope": 2948,
            "src": "224:90:20",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2949,
        "src": "185:132:20"
      }
    ],
    "src": "156:161:20"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
<<<<<<< HEAD
<<<<<<< HEAD
  "updatedAt": "2020-04-18T18:34:24.973Z",
=======
  "updatedAt": "2020-04-16T14:28:55.011Z",
>>>>>>> 36b0d5f3bf0ebccba57c4d0791aae1d41cb5c827
=======
  "updatedAt": "2020-04-21T22:10:01.873Z",
>>>>>>> ee303f788f936d4520e78653b719739650301464
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}