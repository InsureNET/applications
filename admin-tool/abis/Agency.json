{
  "contractName": "Agency",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Projects/INET-IncomeStream/App/admin-tool/contracts/Agency.sol\":\"Agency\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Projects/INET-IncomeStream/App/admin-tool/contracts/Agency.sol\":{\"keccak256\":\"0xa45233a5c0eeb054a7befea711e24481931554397faf8774b1b15f6802f19a48\",\"urls\":[\"bzz-raw://8b0785bd480fb62a2d69195498636badc6d076b45e03c6a61a43fa468c7dab08\",\"dweb:/ipfs/QmYTpTcRxTJ3oD6vddeB9ry1vNcEePWLze1RwceCFnKJUX\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b50603e80601d6000396000f3fe6080604052600080fdfea265627a7a72315820832b631435412c87653a226c938143b5910419b232aa3ab3e6b13c8df1dabfad64736f6c63430005100032",
  "deployedBytecode": "0x6080604052600080fdfea265627a7a72315820832b631435412c87653a226c938143b5910419b232aa3ab3e6b13c8df1dabfad64736f6c63430005100032",
  "sourceMap": "104:1226:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;104:1226:0;;;;;;;",
  "deployedSourceMap": "104:1226:0:-;;;;;",
  "source": "pragma solidity ^0.5.16;\r\n// We have to specify what version of compiler this code will compile with\r\n\r\ncontract Agency {\r\n\r\n//   event NewAgency(uint agencyId, string name, uint256 key);\r\n\r\n//   uint256 keyDigits = 16;\r\n//   uint256 keyModulus = 10 ** keyDigits;\r\n\r\n//   //agency structure\r\n//   struct Agency {\r\n//     string name;\r\n//     uint256 key;\r\n//     string metadata;\r\n//   }\r\n\r\n//   Agency[] public agencies;\r\n\r\n//   mapping (uint => address) public agencyToOwner;\r\n//   mapping (address => uint) ownerAgencyCount;\r\n\r\n//   function _createAgency(string memory _name, uint256 _key) internal {\r\n//     uint256 id = agencies.push(Agency(_name, _key, \"Add some data here\")) - 1;\r\n//     agencyToOwner[id] = msg.sender;\r\n//     ownerAgencyCount[msg.sender]++;\r\n//     emit NewAgency(id, _name, _key);\r\n//   }\r\n\r\n//   function _generateRandomAgencyKey(string memory _str) public view returns (uint256) {\r\n//     uint256 rand = uint256(abi.encode(_str));\r\n//     return rand;\r\n//   }\r\n\r\n//   function createNewAgency(string memory _name) public {\r\n//     //make sure contract can only execute if user is not part of an agency\r\n//     require(ownerAgencyCount[msg.sender] == 0, \"You already have an Agency and Key\");\r\n//     uint256 randKey = _generateRandomAgencyKey(_name);\r\n//     _createAgency(_name, randKey);\r\n//   }\r\n}",
  "sourcePath": "C:\\Projects\\INET-IncomeStream\\App\\admin-tool\\contracts\\Agency.sol",
  "ast": {
    "absolutePath": "/C/Projects/INET-IncomeStream/App/admin-tool/contracts/Agency.sol",
    "exportedSymbols": {
      "Agency": [
        2
      ]
    },
    "id": 3,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2,
        "linearizedBaseContracts": [
          2
        ],
        "name": "Agency",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 3,
        "src": "104:1226:0"
      }
    ],
    "src": "0:1330:0"
  },
  "legacyAST": {
    "absolutePath": "/C/Projects/INET-IncomeStream/App/admin-tool/contracts/Agency.sol",
    "exportedSymbols": {
      "Agency": [
        2
      ]
    },
    "id": 3,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2,
        "linearizedBaseContracts": [
          2
        ],
        "name": "Agency",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 3,
        "src": "104:1226:0"
      }
    ],
    "src": "0:1330:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-06-01T20:08:31.614Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}